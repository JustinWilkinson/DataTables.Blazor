@page "/"
@inject IJSRuntime JS
@using DataTables.Blazor.Options
@using System.Text.Json

<h1>Weather forecast</h1>

<p>This page demonstrates some of the uses of the DataTable component.</p>

<div class="row w-100 card border mb-2">
    <TabControl>
        <TabHeader>
            <TabHeaderTemplate Class="card-header" ButtonGroupClass="w-100"/>
        </TabHeader>
        <TabItems>
            <TabItem Title="Basic Initialization">
                <TabControl>
                    <TabHeader>
                        <TabHeaderTemplate Class="card-header"/>
                    </TabHeader>
                    <TabItems>
                        <div class="card-body">
                            <div class="row mb-3">
                                <div class="col">
                                    <h6>An example of the basic initialization of a DataTable, with data coming from a statically served JSON file.</h6>
                                </div>
                            </div>
                            <TabItem Title="View Demo">
                                <DataTable SourceUrl="sample-data/weather.json" Class="table table-striped table-bordered w-100">
                                    <DataTableColumn Title="Date" Data="Date"/>
                                    <DataTableColumn Title="Temp. (°C)" Data="TemperatureC"/>
                                    <DataTableColumn Title="Summary" ClassName="dt-body-center" Data="Summary"/>
                                </DataTable>
                            </TabItem>
                            <TabItem Title="View Razor">
                                <div class="col-12">
                                    <pre class="mb-0">
&lt;DataTable SourceUrl=&quot;sample-data/weather.json&quot; Class=&quot;table table-striped table-bordered w-100&quot;&gt;
    &lt;DataTableColumn Title=&quot;Date&quot; Data=&quot;Date&quot; /&gt;
    &lt;DataTableColumn Title=&quot;Temp. (&#xB0;C)&quot; Data=&quot;TemperatureC&quot; /&gt;
    &lt;DataTableColumn Title=&quot;Summary&quot; ClassName=&quot;dt-body-center&quot; Data=&quot;Summary&quot; /&gt;
&lt;/DataTable&gt;</pre>
                                </div>
                            </TabItem>
                        </div>
                    </TabItems>
                </TabControl>
            </TabItem>
            <TabItem Title="DOM Sourced Data">
                <TabControl>
                    <TabHeader>
                        <TabHeaderTemplate Class="card-header"/>
                    </TabHeader>
                    <TabItems>
                        <div class="card-body">
                            <div class="row mb-3">
                                <div class="col">
                                    <h6>An example of the initialization of a DataTable, with data coming from the DOM itself.</h6>
                                </div>
                            </div>
                            <TabItem Title="View Demo">
                                <DataTable Id="MyTableDomSourced" Class="table table-striped table-bordered w-100">
                                    <thead>
                                        <tr>
                                            <th>Date</th>
                                            <th>Temp. (C)</th>
                                            <th>Summary</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td>2018-05-06</td>
                                            <td>1</td>
                                            <td>Freezing</td>
                                        </tr>
                                        <tr>
                                            <td>2018-05-07</td>
                                            <td>14</td>
                                            <td>Bracing</td>
                                        </tr>
                                        <tr>
                                            <td>2018-05-08</td>
                                            <td>-13</td>
                                            <td>Freezing</td>
                                        </tr>
                                        <tr>
                                            <td>2018-05-09</td>
                                            <td>-16</td>
                                            <td>Balmy</td>
                                        </tr>
                                        <tr>
                                            <td>2018-05-10</td>
                                            <td>-2</td>
                                            <td>Chilly</td>
                                        </tr>
                                    </tbody>
                                </DataTable>
                            </TabItem>
                            <TabItem Title="View Razor">
                                <div class="col-12">
                                    <pre class="mb-0">
&lt;DataTable Id=&quot;MyTableDomSourced&quot; Class=&quot;table table-striped table-bordered w-100&quot;&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;Date&lt;/th&gt;
            &lt;th&gt;Temp. (C)&lt;/th&gt;
            &lt;th&gt;Summary&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td&gt;2018-05-06&lt;/td&gt;
            &lt;td&gt;1&lt;/td&gt;
            &lt;td&gt;Freezing&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;2018-05-07&lt;/td&gt;
            &lt;td&gt;14&lt;/td&gt;
            &lt;td&gt;Bracing&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;2018-05-08&lt;/td&gt;
            &lt;td&gt;-13&lt;/td&gt;
            &lt;td&gt;Freezing&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;2018-05-09&lt;/td&gt;
            &lt;td&gt;-16&lt;/td&gt;
            &lt;td&gt;Balmy&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;2018-05-10&lt;/td&gt;
            &lt;td&gt;-2&lt;/td&gt;
            &lt;td&gt;Chilly&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/DataTable&gt;</pre>
                                </div>
                            </TabItem>
                        </div>
                    </TabItems>
                </TabControl>
            </TabItem>
            <TabItem Title="Object Sourced Data">
                <TabControl>
                    <TabHeader>
                        <TabHeaderTemplate Class="card-header"/>
                    </TabHeader>
                    <TabItems>
                        <div class="card-body">
                            <div class="row mb-3">
                                <div class="col">
                                    <h6>An example of the initialization of a DataTable, with data coming from a C# code object.</h6>
                                    <p class="text-muted">Note: Owing to the serialization, the Data attribute on the column must be the name of the field post serialization (i.e. in camelCase).</p>
                                </div>
                            </div>
                            <TabItem Title="View Demo">
                                <DataTable Id="MyObjectSourceData" Class="table table-striped table-bordered w-100" Data=WeatherDataset>
                                    <DataTableColumn Title="Date" Data="date"/>
                                    <DataTableColumn Title="Temp. (°C)" Data="temperatureC"/>
                                    <DataTableColumn Title="Summary" ClassName="dt-body-center" Data="summary"/>
                                </DataTable>
                            </TabItem>
                            <TabItem Title="View Razor">
                                <div class="col-12">
                                    <pre class="mb-0">&lt;DataTable Id=&quot;MyObjectSourceData&quot; Class=&quot;table table-striped table-bordered w-100&quot; Data=WeatherDataset&gt;
    &lt;DataTableColumn Title=&quot;Date&quot; Data=&quot;date&quot; /&gt;
    &lt;DataTableColumn Title=&quot;Temp. (°C)&quot; Data=&quot;temperatureC&quot; /&gt;
    &lt;DataTableColumn Title=&quot;Summary&quot; ClassName=&quot;dt-body-center&quot; Data=&quot;summary&quot; /&gt;
&lt;/DataTable&gt;</pre>
                                </div>
                            </TabItem>
                            <TabItem Title="View C#">
                                <div class="col-12">
                                    <pre class="mb-0">@@code{
    private static Dataset&lt;Weather&gt; WeatherDataset = new Dataset&lt;Weather&gt;
    {
        new Weather
        {
            Date = new DateTime(2018, 05, 06),
            TemperatureC = 1,
            Summary = &quot;Freezing&quot;
        },
        new Weather
        {
            Date = new DateTime(2018, 05, 07),
            TemperatureC = 14,
            Summary = &quot;Bracing&quot;
        },
        new Weather
        {
            Date = new DateTime(2018, 05, 08),
            TemperatureC = -13,
            Summary = &quot;Freezing&quot;
        },
        new Weather
        {
            Date = new DateTime(2018, 05, 09),
            TemperatureC = -16,
            Summary = &quot;Balmy&quot;
        },
        new Weather
        {
            Date = new DateTime(2018, 05, 19),
            TemperatureC = -2,
            Summary = &quot;Chilly&quot;
        }
    };

    private record Weather
    {
        public DateTime Date { get; set; }

        public int TemperatureC { get; set; }

        public string Summary { get; set; }
    } 
}</pre>
                                </div>
                            </TabItem>
                        </div>
                    </TabItems>
                </TabControl>
            </TabItem>
            <TabItem Title="JavaScript Callbacks">
                <TabControl>
                    <TabHeader>
                        <TabHeaderTemplate Class="card-header"/>
                    </TabHeader>
                    <TabItems>
                        <div class="card-body">
                            <div class="row mb-3">
                                <div>
                                    <ul>
                                        <li>One of the best things about jQuery DataTables is the degree of customization it allows for using callbacks.</li>
                                        <li>DataTables.Blazor also supports this option, allowing users to specify a JS function to use as a callback.</li>
                                    </ul>
                                </div>
                            </div>
                            <TabItem Title="View Demo">
                                <DataTable SourceUrl="sample-data/weather.json" Class="table table-striped table-bordered w-100">
                                    <DataTableColumn Title="Date" Data="Date" Render="@("demo.renderDate")"/>
                                    <DataTableColumn Title="Temp. (°C)" Data="TemperatureC"/>
                                    <DataTableColumn Title="Summary" ClassName="dt-body-center" Data="Summary" CreatedCell="@("demo.logSummary")"/>
                                </DataTable>
                            </TabItem>
                            <TabItem Title="View Razor">
                                <div class="col-12">
                                    <pre class="mb-0">
&lt;DataTable SourceUrl=&quot;sample-data/weather.json&quot; Class=&quot;table table-striped table-bordered w-100&quot;&gt;
    &lt;DataTableColumn Title=&quot;Date&quot; Data=&quot;Date&quot; Render=&quot;@@(&quot;demo.renderDate&quot;)&quot; /&gt;
    &lt;DataTableColumn Title=&quot;Temp. (&#xB0;C)&quot; Data=&quot;TemperatureC&quot; /&gt;
    &lt;DataTableColumn Title=&quot;Summary&quot; ClassName=&quot;dt-body-center&quot; Data=&quot;Summary&quot; CreatedCell=&quot;@@(&quot;demo.logSummary&quot;)&quot; /&gt;
&lt;/DataTable&gt;</pre>
                                </div>
                            </TabItem>
                            <TabItem Title="View JavaScript">
                                <div class="col-12">
                                    <pre class="mb-0">
window.demo = {
    logSummary: (td, cellData, rowData, row, col) => {
        console.log(`(Row ${(row + 1)}, DataTableColumn ${(col + 1)}) = ${cellData}`);
    },
    renderDate: data => new Date(data).toLocaleString('en-GB')
};</pre>
                                </div>
                            </TabItem>
                        </div>
                    </TabItems>
                </TabControl>
            </TabItem>
            <TabItem Title="A Larger Dataset">
                <TabControl>
                    <TabHeader>
                        <TabHeaderTemplate Class="card-header"/>
                    </TabHeader>
                    <TabItems>
                        <div class="card-body">
                            <div class="row mb-3">
                                <div class="col">
                                    <h6>An example of the basic initialization of a DataTable, with a larger dataset to demonstrate its performance.</h6>
                                </div>
                            </div>
                            <TabItem Title="View Demo">
                                <DataTable SourceUrl="sample-data/users.json" Class="table table-striped table-bordered w-100">
                                    <DataTableColumn Title="Id" Data="id"/>
                                    <DataTableColumn Title="First Name" Data="first_name"/>
                                    <DataTableColumn Title="Last Name" Data="last_name"/>
                                    <DataTableColumn Title="Email" Data="email"/>
                                </DataTable>
                            </TabItem>
                            <TabItem Title="View Razor">
                                <div class="col-12">
                                    <pre class="mb-0">
&lt;DataTable SourceUrl=&quot;sample-data/users.json&quot; Class=&quot;table table-striped table-bordered w-100&quot;&gt;
	&lt;DataTableColumn Title=&quot;Id&quot; Data=&quot;id&quot; /&gt;
	&lt;DataTableColumn Title=&quot;First Name&quot; Data=&quot;first_name&quot; /&gt;
	&lt;DataTableColumn Title=&quot;Last Name&quot; Data=&quot;last_name&quot; /&gt;
	&lt;DataTableColumn Title=&quot;Email&quot; Data=&quot;email&quot; /&gt;
&lt;/DataTable&gt;</pre>
                                </div>
                            </TabItem>
                        </div>
                    </TabItems>
                </TabControl>
            </TabItem>
            <TabItem Title="DOM Sourced Data With AutoReload">
                <TabControl>
                    <TabHeader>
                        <TabHeaderTemplate Class="card-header"/>
                    </TabHeader>
                    <TabItems>
                        <div class="card-body">
                            <div class="row mb-3">
                                <div class="col">
                                    <h6>An example of the initialization of a DataTable, with data coming from the DOM itself.</h6>
                                </div>
                            </div>
                            <TabItem Title="View Demo">
                                <button @onclick="AddData">Add Data</button>
                                <DataTable Id="MyTableDomSourcedWithAutoReload" Class="table table-striped table-bordered w-100" AutoReload="true">
                                    <thead>
                                        <tr>
                                            <th>Date</th>
                                            <th>Temp. (C)</th>
                                            <th>Summary</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var row in _mutableWeatherDataset)
                                        {
                                            <tr>
                                                <td>@row.Date</td>
                                                <td>@row.TemperatureC</td>
                                                <td>@row.Summary</td>
                                            </tr>
                                        }
                                    </tbody>
                                </DataTable>
                            </TabItem>
                            <TabItem Title="View Razor">
                                <div class="col-12">
                                    <pre class="mb-0">
&lt;DataTable Id=&quot;MyTableDomSourcedWithAutoReload&quot; Class=&quot;table table-striped table-bordered w-100&quot; AutoReload=&quot;true&quot;&gt;
    &lt;thead&gt;
	    &lt;tr&gt;
		    &lt;th&gt;Date&lt;/th&gt;
		    &lt;th&gt;Temp. (C)&lt;/th&gt;
		    &lt;th&gt;Summary&lt;/th&gt;
	    &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
	    @@foreach (var row in _mutableWeatherDataset)
	    {
		    &lt;tr&gt;
			    &lt;td&gt;@@row.Date&lt;/td&gt;
			    &lt;td&gt;@@row.TemperatureC&lt;/td&gt;
			    &lt;td&gt;@@row.Summary&lt;/td&gt;
		    &lt;/tr&gt;
	    }
    &lt;/tbody&gt;
&lt;/DataTable&gt;</pre>
                                </div>
                            </TabItem>
                            <TabItem Title="View C#">
                               <div class="col-12">
                                    <pre class="mb-0">
private async Task AddData()
{
	_mutableWeatherDataset.Add(new Weather
	{
		Date = DateTime.UtcNow.AddDays(-Random.Shared.Next(1, 7)),
		TemperatureC = Random.Shared.Next(20, 25),
		Summary = &quot;Toasty&quot;
	});
}

private Dataset&lt;Weather&gt; _mutableWeatherDataset = new Dataset&lt;Weather&gt;
{
	new Weather
	{
		Date = new DateTime(2018, 05, 06),
		TemperatureC = 1,
		Summary = &quot;Freezing&quot;
	},
	new Weather
	{
		Date = new DateTime(2018, 05, 07),
		TemperatureC = 14,
		Summary = &quot;Bracing&quot;
	},
	new Weather
	{
		Date = new DateTime(2018, 05, 08),
		TemperatureC = -13,
		Summary = &quot;Freezing&quot;
	},
	new Weather
	{
		Date = new DateTime(2018, 05, 09),
		TemperatureC = -16,
		Summary = &quot;Balmy&quot;
	},
	new Weather
	{
		Date = new DateTime(2018, 05, 19),
		TemperatureC = -2,
		Summary = &quot;Chilly&quot;
	}
};

private record Weather
{
	public DateTime Date { get; set; }

	public int TemperatureC { get; set; }

	public string Summary { get; set; }
}
                                    </pre>
                               </div>
                            </TabItem>
                        </div>
                    </TabItems>
                </TabControl>
            </TabItem>
            <TabItem Title="Buttons">
                <TabControl>
                    <TabHeader>
                        <TabHeaderTemplate Class="card-header"/>
                    </TabHeader>
                    <TabItems>
                        <div class="card-body">
                            <div class="row mb-3">
                                <div class="col">
                                    <h6>An example of the basic initialization of a DataTable with buttons.</h6>
                                </div>
                            </div>
                            <TabItem Title="View Demo">
                                <DataTable SourceUrl="sample-data/users.json" Class="table table-striped table-bordered w-100" Options="_buttonsDemoOptions">
                                    <DataTableColumn Title="Id" Data="id"/>
                                    <DataTableColumn Title="First Name" Data="first_name"/>
                                    <DataTableColumn Title="Last Name" Data="last_name"/>
                                    <DataTableColumn Title="Email" Data="email"/>
                                </DataTable>
                            </TabItem>
                            <TabItem Title="View Razor">
                                <div class="col-12">
                                    <pre class="mb-0">
&lt;DataTable SourceUrl=&quot;sample-data/users.json&quot; Class=&quot;table table-striped table-bordered w-100&quot;&gt;
	&lt;DataTableColumn Title=&quot;Id&quot; Data=&quot;id&quot; /&gt;
	&lt;DataTableColumn Title=&quot;First Name&quot; Data=&quot;first_name&quot; /&gt;
	&lt;DataTableColumn Title=&quot;Last Name&quot; Data=&quot;last_name&quot; /&gt;
	&lt;DataTableColumn Title=&quot;Email&quot; Data=&quot;email&quot; /&gt;
&lt;/DataTable&gt;</pre>
                                </div>
                            </TabItem>
                        </div>
                    </TabItems>
                </TabControl>
            </TabItem>
            <TabItem Title="Events">
                <TabControl>
                    <TabHeader>
                        <TabHeaderTemplate Class="card-header"/>
                    </TabHeader>
                    <TabItems>
                        <div class="card-body">
                            <div class="row mb-3">
                                <div class="col">
                                    <h6>An example of the basic initialization of a DataTable with events.</h6>
                                </div>
                            </div>
                            <TabItem Title="View Demo">
                                <div class="row">
                                    <div class="col-8">
                                        <DataTable 
                                                SourceUrl="sample-data/users.json"
                                                Class="table table-striped table-bordered w-100" 
                                                Options="_eventsDemoOptions"
                                                OnRowClick="@((e) => AddEventLog($"Row {e.Index} clicked. Id: {e.Id} Data: {Convert.ToString(e.Data)}"))"
                                                OnCellClick="@((e) => AddEventLog($"Cell {e.ColumnId} clicked. RowIndex: {e.RowIndex}, RowId: {e.RowId}, Value: {e.Data}"))"
                                                OnInit="@(() => AddEventLog("Datatables initialized"))"
                                                OnChildRowChanged="@(() => AddEventLog("ChildRowChanged"))"
                                                OnColumnSizing="@(() => AddEventLog("ColumnSizing"))"
                                                OnColumnVisibility="@(() => AddEventLog("ColumnVisibility"))"
                                                OnDestroy="@(() => AddEventLog("Destroy"))"
                                                OnDraw="@(() => AddEventLog("Draw"))"
                                                OnError="@((e) => AddEventLog($"Error. Data: {JsonSerializer.Serialize(e)}"))"
                                                OnLength="@(() => AddEventLog("Length"))"
                                                OnOrder="@(() => AddEventLog("Order"))"
                                                OnPage="@((e) => AddEventLog($"Page. Data: {JsonSerializer.Serialize(e)}"))"
                                                OnPreDraw="@(() => AddEventLog("PreDraw"))"
                                                OnPreInit="@(() => AddEventLog("PreInit"))"
                                                OnPreXhr="@(() => AddEventLog("PreXhr"))"
                                                OnProcessing="@(() => AddEventLog("Processing"))"
                                                OnRequestChild="@(() => AddEventLog("RequestChild"))"
                                                OnSearch="@(() => AddEventLog("Search"))"
                                                OnStateLoadParams="@(() => AddEventLog("StateLoadParams"))"
                                                OnStateLoaded="@(() => AddEventLog("StateLoaded"))"
                                                OnStateSaveParams="@(() => AddEventLog("StateSaveParams"))"
                                                OnXhr="@(() => AddEventLog("Xhr"))">
                                            <DataTableColumn Title="Id" Data="id" Visible="false" />
                                            <DataTableColumn Title="First Name" Data="first_name"/>
                                            <DataTableColumn Title="Last Name" Data="last_name"/>
                                            <DataTableColumn Title="Email" Data="email"/>
                                        </DataTable>
                                    </div>
                                    <div class="col-4">
                                        <h4>Events log:</h4>
                                        <textarea id="eventsLogs" value="@EventsLogs" style="width:90%;height:80%;"/>
                                        <button type="button" @onclick="@(() => EventsLogs = "")">Clear</button>
                                    </div>
                                </div>
                            </TabItem>
                            <TabItem Title="View Razor">
                                <div class="col-12">
                                    <pre class="mb-0">
 &lt;DataTable 
		SourceUrl=&quot;sample-data/users.json&quot;
		Class=&quot;table table-striped table-bordered w-100&quot; 
		Options=&quot;_eventsDemoOptions&quot;
		OnRowClick=&quot;@@((e) =&gt; AddEventLog($&quot;Row {e.Index} clicked. Id: {e.Id} Data: {Convert.ToString(e.Data)}&quot;))&quot;
		OnCellClick=&quot;@@((e) =&gt; AddEventLog($&quot;Cell {e.ColumnId} clicked. RowIndex: {e.RowIndex}, RowId: {e.RowId}, Value: {e.Data}&quot;))&quot;
		OnInit=&quot;@@(() =&gt; AddEventLog(&quot;Datatables initialized&quot;))&quot;
		OnChildRowChanged=&quot;@@(() =&gt; AddEventLog(&quot;ChildRowChanged&quot;))&quot;
		OnColumnSizing=&quot;@@(() =&gt; AddEventLog(&quot;ColumnSizing&quot;))&quot;
		OnColumnVisibility=&quot;@@(() =&gt; AddEventLog(&quot;ColumnVisibility&quot;))&quot;
		OnDestroy=&quot;@@(() =&gt; AddEventLog(&quot;Destroy&quot;))&quot;
		OnDraw=&quot;@@(() =&gt; AddEventLog(&quot;Draw&quot;))&quot;
		OnError=&quot;@@((e) =&gt; AddEventLog($&quot;Error. Data: {JsonSerializer.Serialize(e)}&quot;))&quot;
		OnLength=&quot;@@(() =&gt; AddEventLog(&quot;Length&quot;))&quot;
		OnOrder=&quot;@@(() =&gt; AddEventLog(&quot;Order&quot;))&quot;
		OnPage=&quot;@@((e) =&gt; AddEventLog($&quot;Page. Data: {JsonSerializer.Serialize(e)}&quot;))&quot;
		OnPreDraw=&quot;@@(() =&gt; AddEventLog(&quot;PreDraw&quot;))&quot;
		OnPreInit=&quot;@@(() =&gt; AddEventLog(&quot;PreInit&quot;))&quot;
		OnPreXhr=&quot;@@(() =&gt; AddEventLog(&quot;PreXhr&quot;))&quot;
		OnProcessing=&quot;@@(() =&gt; AddEventLog(&quot;Processing&quot;))&quot;
		OnRequestChild=&quot;@@(() =&gt; AddEventLog(&quot;RequestChild&quot;))&quot;
		OnSearch=&quot;@@(() =&gt; AddEventLog(&quot;Search&quot;))&quot;
		OnStateLoadParams=&quot;@@(() =&gt; AddEventLog(&quot;StateLoadParams&quot;))&quot;
		OnStateLoaded=&quot;@@(() =&gt; AddEventLog(&quot;StateLoaded&quot;))&quot;
		OnStateSaveParams=&quot;@@(() =&gt; AddEventLog(&quot;StateSaveParams&quot;))&quot;
		OnXhr=&quot;@@(() =&gt; AddEventLog(&quot;Xhr&quot;))&quot;&gt;
	&lt;DataTableColumn Title=&quot;Id&quot; Data=&quot;id&quot; Visible=&quot;false&quot; /&gt;
	&lt;DataTableColumn Title=&quot;First Name&quot; Data=&quot;first_name&quot;/&gt;
	&lt;DataTableColumn Title=&quot;Last Name&quot; Data=&quot;last_name&quot;/&gt;
	&lt;DataTableColumn Title=&quot;Email&quot; Data=&quot;email&quot;/&gt;
&lt;/DataTable&gt;</pre>
                                </div>
                            </TabItem>
                        </div>
                    </TabItems>
                </TabControl>
            </TabItem>
        </TabItems>
    </TabControl>
</div>
 

@code{
    private readonly DataTableOptions _buttonsDemoOptions = new DataTableOptions
    {
        DOM = "Bfrtip",
        Buttons = new List<object>
        {
            "colvis"
        },
        Language = new LanguageOptions
        {
            Buttons = new
            {
                colvis = "Column Visibility"
            }
        }
    };

    private readonly DataTableOptions _eventsDemoOptions = new DataTableOptions
    {
        DOM = "Bfrtip", 
        RowId = "id",
        Buttons = new List<object>
        {
            "colvis"
        },
        Paging =true,
        Language = new LanguageOptions
        {
            Buttons = new
            {
                colvis = "Column Visibility"
            }
        }
    };

    private async Task AddData()
    {
        _mutableWeatherDataset.Add(new Weather
        {
            Date = DateTime.UtcNow.AddDays(-Random.Shared.Next(1, 7)),
            TemperatureC = Random.Shared.Next(20, 25),
            Summary = "Toasty"
        });
    }

    private static Dataset<Weather> WeatherDataset = new Dataset<Weather>
    {
        new Weather
        {
            Date = new DateTime(2018, 05, 06),
            TemperatureC = 1,
            Summary = "Freezing"
        },
        new Weather
        {
            Date = new DateTime(2018, 05, 07),
            TemperatureC = 14,
            Summary = "Bracing"
        },
        new Weather
        {
            Date = new DateTime(2018, 05, 08),
            TemperatureC = -13,
            Summary = "Freezing"
        },
        new Weather
        {
            Date = new DateTime(2018, 05, 09),
            TemperatureC = -16,
            Summary = "Balmy"
        },
        new Weather
        {
            Date = new DateTime(2018, 05, 19),
            TemperatureC = -2,
            Summary = "Chilly"
        }
    };

    private Dataset<Weather> _mutableWeatherDataset = new Dataset<Weather>
    {
        new Weather
        {
            Date = new DateTime(2018, 05, 06),
            TemperatureC = 1,
            Summary = "Freezing"
        },
        new Weather
        {
            Date = new DateTime(2018, 05, 07),
            TemperatureC = 14,
            Summary = "Bracing"
        },
        new Weather
        {
            Date = new DateTime(2018, 05, 08),
            TemperatureC = -13,
            Summary = "Freezing"
        },
        new Weather
        {
            Date = new DateTime(2018, 05, 09),
            TemperatureC = -16,
            Summary = "Balmy"
        },
        new Weather
        {
            Date = new DateTime(2018, 05, 19),
            TemperatureC = -2,
            Summary = "Chilly"
        }
    };

    private string EventsLogs { get; set; }

    void AddEventLog(string log)
    {
        EventsLogs +=  $"- {log}\n";
        Task.Run(() => JS.InvokeVoidAsync("demo.scrollToBottom", "eventsLogs"));
    } 
     
    private record Weather
    {
        public DateTime Date { get; set; }

        public int TemperatureC { get; set; }

        public string Summary { get; set; }
    } 
}